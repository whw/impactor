#!/usr/bin/env python

import os
import json
import random
import requests
import sched
import sys
import time

# So we can import from parent directory
sys.path.insert(1, os.path.join(sys.path[0], '..'))
from backend import oracle, status
from backend.db import db

url = None

# Determine how we're gonna go about sending
stage = os.getenv('T_STAGE', 'dev')
if stage == 'dev':
    url = "http://localhost:8888"
elif stage == 'test':
    url = "http://localhost:8888"
elif stage == 'prod':
    # FIX(whw): Including the relative (to the runner of the script) path to
    # the file here is jank and brittle. This code is also duplicated :-(
    with open('api-gateway-url.txt', 'r') as f:
        url = f.read().strip()
    f.closed
else:
    print('Invalid stage recieved: ' + stage)
    raise


def send_status(url, status):
    data = json.dumps(status)
    response = requests.post(url, data=data)
    print("Status sent prod: " + data +
          ". Next action: " + str(response.text))

    schedule_next_run()

s = sched.scheduler(time.time, time.sleep)


def schedule_next_run():
    # seconds to wait, priority, func, args (random status, either -1, 0, or 1)
    s.enter(1, 1, send_status, [
            url, status._build_status(random.randint(-1, 1))])


def run():
    schedule_next_run()
    s.run()

print("ctrl-c to stop.\n")
run()
